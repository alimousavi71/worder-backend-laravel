<?php

namespace App\Http\Controllers\Admin;

use App\Enums\General\BtnType;
use App\Helper\Helper;
use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\$CLASS_NAME$\StoreRequest;
use App\Http\Requests\Admin\$CLASS_NAME$\UpdateRequest;
use App\Models\$CLASS_NAME$;
use Exception;
use Illuminate\Http\Request;
use Yajra\DataTables\Facades\DataTables;

class $CLASS_NAME$Controller extends Controller
{
    public function index()
    {
        $title = trans('panel.$ROUTE_NAME$.index');
        $routeData = route('admin.$ROUTE_NAME$.data');
        $selects = ['id', 'created_at'];
        return view('admin.$VIEW_NAME$.index', compact('title', 'routeData', 'selects'));
    }

    public function data()
    {

        try {
            $$NAME_PLURAL$ = $CLASS_NAME$::query();
            return DataTables::of($$NAME_PLURAL$)
                ->editColumn('created_at', function ($$MODEL_VAR_NAME$) {
                    return $$MODEL_VAR_NAME$->created_at->toJalali()->format('h:i Y-m-d');
                })
                ->addColumn('action', function ($$MODEL_VAR_NAME$) {
                    $actions = Helper::btnMaker(BtnType::Warning, route('admin.$ROUTE_NAME$.edit', $$MODEL_VAR_NAME$->id), trans('panel.action.edit'));
                    $actions .= Helper::btnMaker(BtnType::Info, route('admin.$ROUTE_NAME$.show', $$MODEL_VAR_NAME$->id), trans('panel.action.info'));
                    return $actions;
                })
                ->make();
        } catch (Exception $e) {
            return $e->getMessage();
        }
    }

    public function create()
    {
        $title = trans('panel.$ROUTE_NAME$.create');
        $routeStore = route('admin.$ROUTE_NAME$.store');
        return view('admin.$VIEW_NAME$.create', compact('title', 'routeStore'));
    }

    public function store(StoreRequest $request)
    {
        try {
            $item = $this->itemProvider($request);
            $CLASS_NAME$::create($item);

            return response()->json([
                'result' => 'success',
                'message' => trans('panel.success_store')
            ]);
        } catch (Exception $e) {
            report($e);
            return response()->json([
                'result' => 'exception',
                'message' => trans('panel.error_store')
            ], 500);
        }
    }

    public function edit($CLASS_NAME$ $$MODEL_VAR_NAME$)
    {
        $title = trans('panel.$ROUTE_NAME$.edit');
        $routeUpdate = route('admin.$ROUTE_NAME$.update', $$MODEL_VAR_NAME$->id);
        $routeDestroy = route('admin.$ROUTE_NAME$.destroy', $$MODEL_VAR_NAME$->id);
        return view('admin.$VIEW_NAME$.edit', compact('title', 'routeUpdate','routeDestroy', '$MODEL_VAR_NAME$'));
    }

    public function update(UpdateRequest $request, $CLASS_NAME$ $$MODEL_VAR_NAME$)
    {
        try {
            $item = $this->itemProvider($request);
            $$MODEL_VAR_NAME$->update($item);

            return response()->json([
                'result' => 'success',
                'message' => trans('panel.success_update')
            ]);
        } catch (Exception $e) {
            report($e);
            return response()->json([
                'result' => 'exception',
                'message' => trans('panel.error_update')
            ], 500);
        }
    }

    public function show($CLASS_NAME$ $$MODEL_VAR_NAME$)
    {
        $title = trans('panel.$ROUTE_NAME$.show');
        return view('admin.$VIEW_NAME$.show', compact('title', '$MODEL_VAR_NAME$'));
    }

    public function destroy($CLASS_NAME$ $$MODEL_VAR_NAME$)
    {
        try {
            $$MODEL_VAR_NAME$->delete();
            return redirect(route('admin.$ROUTE_NAME$.index'))->with('success', trans('panel.success_delete'));
        } catch (Exception $e) {
            report($e);
            return redirect(route('admin.$ROUTE_NAME$.index'))->with('danger', trans('panel.error_delete'));
        }
    }

    /**
     * @param Request $request
     * @param bool $editMode
     * @return array
     */
    protected function itemProvider(Request $request, bool $editMode = false): array
    {
        $item['title'] = $request->get('title');
        return $item;
    }
}
