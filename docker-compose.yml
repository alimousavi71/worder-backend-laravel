version: '3'
services:
    #PHP Service
    php:
        build:
            context: .
            dockerfile: Dockerfile
        image: php8.2
        container_name: php_worder
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - worder-network

    #Nginx Service
    webserver:
        image: nginx:1.24.0
        container_name: webserver_worder
        restart: unless-stopped
        tty: true
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - worder-network

    #MySQL Service
    db:
        image: mysql:8.0.33
        container_name: db_worder
        restart: always
        tty: true
        ports:
            - "33066:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql/
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - worder-network
    #PHPMYADMIN
    phpmyadmin:
        image: phpmyadmin:5
        container_name: phpmyadmin_worder
        restart: always
        depends_on:
            - db
        ports:
            - "8081:80"
        environment:
            PMA_HOST: db_worder
            UPLOAD_LIMIT: 20M
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_USERNAME}
        networks:
            - worder-network

#Docker Networks
networks:
    worder-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
    elasticsearch-data:
        driver: local
